#include <avr/pgmspace.h>

typedef uint8_t (*PTRFX_retUINT8_T)(void);
typedef uint16_t (*PTRFX_retUINT16_T)(void);
typedef void (*PTRFX_retVOID)(void);

const int vv[50] PROGMEM={
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
};
const unsigned int vvv[] PROGMEM={
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,

1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,

1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,

1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,

1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,

1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,

1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,

1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,

1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,

1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,

1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,

1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,

1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
1,2,3,4,5,6,7,8,9,10,
};

void fx0(void)
{
    Serial.println("fx0 ");
    Serial.println("fx0 ");
    Serial.println("fx0 ");
    Serial.println("fx0 ");
    Serial.println("fx0 ");
    Serial.println("fx0 ");
    Serial.println("fx0 ");
    Serial.println("fx0 ");
    Serial.println("fx0 ");
    Serial.println("fx0 ");
}
void fx1(void)
{
    Serial.println("fx1 ");
    Serial.println("fx1 ");
    Serial.println("fx1 ");
    Serial.println("fx1 ");
    Serial.println("fx1 ");
    Serial.println("fx1 ");
    Serial.println("fx1 ");
    Serial.println("fx1 ");
    Serial.println("fx1 ");
    Serial.println("fx1 ");
}
void fx2(void)
{
    Serial.println("fx2 ");
    Serial.println("fx2 ");
    Serial.println("fx2 ");
    Serial.println("fx2 ");
    Serial.println("fx2 ");
    Serial.println("fx2 ");
    Serial.println("fx2 ");
    Serial.println("fx2 ");
    Serial.println("fx2 ");
    Serial.println("fx2 ");
    Serial.println("fx2 ");
}
void fx3(void)
{
    Serial.println("fx3 ");
}
void fx4(void)
{
    Serial.println("fx4 ");
}
void fx5(void)
{
    Serial.println("fx5 ");
}
void fx6(void)
{
    Serial.println("fx6 ");
}
void fx7(void)
{
    Serial.println("fx7 ");
}
void fx8(void)
{
    Serial.println("fx8 ");
}

typedef void (*const PTRFX_retVOID_)(void);

PTRFX_retVOID_ const v0[] PROGMEM ={fx0,fx1};
PTRFX_retVOID_ const v1[] PROGMEM ={fx2,fx3, fx4};
PTRFX_retVOID_ const v2[] PROGMEM ={fx5,fx6, fx7,fx8};

PTRFX_retVOID_ *const v[] PROGMEM ={v0, v1, v2};


void setup() {
  // put your setup code here, to run once:
Serial.begin(230400);
   v[0][0]();
    v[0][1]();

    v[1][0]();
    v[1][1]();
    v[1][2]();

    v[2][0]();
    v[2][1]();
    v[2][2]();
    v[2][3]();

    //DDRB = vv[50];
    PORTB =(char) pgm_read_word_near(&vvv[300]);
}

void loop() {
  // put your main code here, to run repeatedly:

}
